"use strict";(self.webpackChunktop_land_web=self.webpackChunktop_land_web||[]).push([[617],{617:(e,t,s)=>{s.d(t,{default:()=>h});var r=s(979),a=s(628),n=s(2),i=s(683);class l extends a.A{static ALLY="group";static CASTER="caster";static MAX="max";everyone;allies;self;getType(){return r.I5.目标}execute(e,t,s){const r=this.getTargets(e,t,s);return r.length>0&&this.executeChildren(e,t,r)}load(e,t){super.load(e,t);const s=this.settings.getString(l.ALLY,"enemy").toLowerCase();this.everyone="both"===s,this.allies="ally"===s,this.self="true"===this.settings.getString(l.CASTER,"false").toLowerCase()}getTargets(e,t,s){n.z3("getTargets() must be implemented by subclass")}determineTargets(e,t,s,r){const a=this.parseValues(e,l.MAX,t,99),i=[];if(a<=0)return n.z3(`${this.skill.name}, max targets must be greater than 0`),i;for(let t=0;t<s.length;t++){const n=s[t],l=r(n),g=i.length;for(let t=0;t<l.length;t++){const s=l[t];if(this.isValidTarget(e,n,s)&&(i.push(s),i.length-g>=a))break}}return this.self&&i.push(e),i}isValidTarget(e,t,s){return s!==e&&(this.everyone||this.allies===i.Vb(e,s))}}const g=l,h=class extends g{getKey(){return"first"}getTargets(e,t,s){return this.determineTargets(e,t,s,(e=>{const t=i.EW(e);return t?[t]:[]}))}}}}]);